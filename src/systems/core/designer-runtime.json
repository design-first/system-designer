{
  "name": "designer-runtime",
  "master": false,
  "version": "1.0.0",
  "description": "System Designer Runtime",
  "schemas": {
    "104ad1f48518376": {
      "_id": "104ad1f48518376",
      "_name": "_Channel",
      "_core": true,
      "$editorUpdateSystem": "event",
      "$editorUpdateSchema": "event",
      "$editorUpdateSchemaId": "event",
      "$editorUpdateSchemaName": "event",
      "$editorUpdateModel": "event",
      "$editorUpdateModelId": "event",
      "$editorUpdateType": "event",
      "$editorDeleteType": "event",
      "$editorUpdateBehavior": "event",
      "$editorDeleteBehavior": "event",
      "$editorUpdateComponent": "event",
      "$editorUpdateComponentId": "event",
      "$editorDeleteComponent": "event",
      "$appLogDebug": "event",
      "$appLogInfo": "event",
      "$appLogWarn": "event",
      "$appLogError": "event",
      "$appLoadSystem": "event",
      "$designerSync": "event",
      "$designerCreateBehavior": "event",
      "$designerCreateComponent": "event",
      "$designerCreateType": "event",
      "$designerCreateSchema": "event",
      "$designerCreateModel": "event",
      "$designerDeleteSchema": "event",
      "$designerDeleteModel": "event",
      "$designerDeleteType": "event",
      "$designerDeleteBehavior": "event",
      "$designerDeleteComponent": "event",
      "$designerUpdateComponent": "event",
      "$designerUpdateModel": "event",
      "$designerUpdateBehavior": "event",
      "$runtimeCreateComponent": "event",
      "$runtimeDeleteComponent": "event",
      "$runtimeUpdateComponent": "event",
      "_inherit": ["_Component"],
      "send": "event"
    },
    "b101ff149531913e": {
      "_id": "b101ff149531913e",
      "_name": "_RuntimeHelper",
      "_inherit": ["_Component"],
      "_core": true,
      "checkElectron": "method",
      "checkCordova": "method",
      "getBundle": "method"
    }
  },
  "models": {
    "135c71078810af2": {
      "_id": "135c71078810af2",
      "_name": "_Channel",
      "_inherit": ["_Component"],
      "_core": true,
      "$editorUpdateSchemaName": {
        "params": [
          { "name": "name", "type": "string" },
          { "name": "id", "type": "string" }
        ]
      },
      "$designerSync": {},
      "$appLoadSystem": { "params": [{ "name": "system", "type": "object" }] },
      "$designerCreateBehavior": {
        "params": [{ "name": "behavior", "type": "object" }]
      },
      "$editorUpdateBehavior": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "behavior", "type": "object" }
        ]
      },
      "$designerUpdateBehavior": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "behavior", "type": "object" }
        ]
      },
      "$editorDeleteBehavior": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerDeleteBehavior": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerCreateComponent": {
        "params": [
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$editorUpdateComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$editorUpdateComponentId": {
        "params": [
          { "name": "oldId", "type": "string" },
          { "name": "newId", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$designerUpdateComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$editorDeleteComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$designerDeleteComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$designerCreateType": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "type", "type": "object" }
        ]
      },
      "$editorUpdateType": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "type", "type": "object" }
        ]
      },
      "$editorDeleteType": { "params": [{ "name": "id", "type": "string" }] },
      "$designerCreateSchema": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "schema", "type": "object" }
        ]
      },
      "$editorUpdateSchema": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "schema", "type": "object" }
        ]
      },
      "$editorUpdateSchemaId": {
        "params": [
          { "name": "oldId", "type": "string" },
          { "name": "newId", "type": "string" }
        ]
      },
      "$designerDeleteSchema": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerCreateModel": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "model", "type": "object" }
        ]
      },
      "$editorUpdateModel": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "model", "type": "object" }
        ]
      },
      "$designerUpdateModel": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "model", "type": "object" }
        ]
      },
      "$editorUpdateModelId": {
        "params": [
          { "name": "oldId", "type": "string" },
          { "name": "newId", "type": "string" }
        ]
      },
      "$designerDeleteModel": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerDeleteType": { "params": [{ "name": "id", "type": "string" }] },
      "$editorUpdateSystem": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "system", "type": "object" }
        ]
      },
      "$appLogDebug": { "params": [{ "name": "message", "type": "string" }] },
      "$appLogInfo": { "params": [{ "name": "message", "type": "string" }] },
      "$appLogWarn": { "params": [{ "name": "message", "type": "string" }] },
      "$appLogError": { "params": [{ "name": "message", "type": "string" }] },
      "$runtimeCreateComponent": {
        "params": [
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$runtimeDeleteComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$runtimeUpdateComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" },
          { "name": "field", "type": "string" },
          { "name": "value", "type": "any" }
        ]
      },
      "send": { "params": [{ "name": "message", "type": "message" }] },
      "$systemInstalled": {
        "params": [
          { "name": "id", "type": "string", "mandatory": true, "default": "" }
        ]
      },
      "$systemResolved": {
        "params": [
          { "name": "id", "type": "string", "mandatory": true, "default": "" }
        ]
      },
      "$systemUninstalled": {
        "params": [
          { "name": "id", "type": "string", "mandatory": true, "default": "" }
        ]
      },
      "$systemStarted": {
        "params": [
          { "name": "id", "type": "string", "mandatory": true, "default": "" }
        ]
      },
      "$systemStopped": {
        "params": [
          { "name": "id", "type": "string", "mandatory": true, "default": "" }
        ]
      }
    },
    "k12913176cf17c75": {
      "_id": "k12913176cf17c75",
      "_name": "_RuntimeHelper",
      "_description": "",
      "checkElectron": { "description": "", "result": "any" },
      "checkCordova": { "description": "", "result": "any" },
      "getBundle": { "description": "", "result": "any" },
      "_core": true
    }
  },
  "behaviors": {
    "f1c9d810bdf16d0f": {
      "_id": "f1c9d810bdf16d0f",
      "component": "16d0e138c8170b2",
      "state": "start",
      "action": "function start() {\n  var bundle = '';\n  var id = '';\n  var system = '';\n  var logger = this.require('logger');\n  var helper = this.require('runtimeHelper');\n  var storeConfig = this.require('storage').get('system-designer-config');\n\n  // check platform\n  helper.checkElectron();\n  helper.checkCordova();\n  \n  // get the bundle\n  bundle = helper.getBundle();\n  \n  logger.level('debug');\n\n  // import the bundle\n  logger.debug('analyzing ' + bundle.name +' system...');\n  id = $db.importSystem(bundle);\n\n  // update title\n  document.title = bundle.name;\n\n  // start the bundle\n  system = this.require(id);\n\n  if (system && system.start) {\n    setTimeout(function() { \n      logger.debug('starting ' + bundle.name + ' system...');\n      system.start();\n    }, 100);\n  } else {\n    logger.debug('starting ' + bundle.name + ' system...');\n  }\n  \n  setTimeout(function() {\n    let domDebug = document.querySelectorAll('[src*=livereload]').length;\n    let domNb = 3 + domDebug;\n    \n    if (typeof cordova !== 'undefined') { domNb = 6 + domDebug } //\n    if (navigator.userAgent.toLowerCase().indexOf('electron') !== -1) { domNb = 3 }\n    \n    if (document.body.children.length === domNb) {\n      var message = document.getElementById('message');\n      if (message) message.style.display = 'flex'; \n    }}, 100);\n}",
      "useCoreAPI": true,
      "core": true
    },
    "c165d41881d11694": {
      "_id": "c165d41881d11694",
      "component": "channel",
      "state": "send",
      "action": "function send(message) { \n  var designer = this.require('designer'),\n      checkStringify = null;\n\n  if (typeof cordova !== 'undefined') {\n    messages.push(message);\n  }\n  try {\n    // test\n    checkStringify = JSON.stringify(message);\n    \n    this.require('storage').set('system-designer-message', message);\n  } catch (e) {\n  }\t\n}",
      "useCoreAPI": false,
      "core": true
    },
    "e19376157a516c7e": {
      "_id": "e19376157a516c7e",
      "component": "_RuntimeHelper",
      "state": "checkElectron",
      "action": "function checkElectron() { \n  if (typeof global !== 'undefined' && typeof window === 'undefined') {\n    require = require;\n  }\n}",
      "useCoreAPI": false,
      "core": true
    },
    "u13f0f1683716328": {
      "_id": "u13f0f1683716328",
      "component": "_RuntimeHelper",
      "state": "checkCordova",
      "action": "function checkCordova() {\n  var params = '';\n\n  function _getParams() {\n    var result = {};\n    var urlParams = [];\n    var system = null;\n\n    urlParams = document.location.href.split('?');\n\n    if (urlParams.length > 1) {\n      urlParams = urlParams[1].split('&');\n      urlParams.forEach(function (urlParam) {\n        var name = '',\n          value = '';\n\n        name = urlParam.split('=')[0].trim();\n        value = urlParam.split('=')[1].trim();\n\n        result[name] = decodeURIComponent(value);\n      });\n    }\n    return result;\n  }\n  // case of cordova    \n  if (typeof cordova !== 'undefined') {\n\n    window.messages = [];\n    window.lastPage = 'index.html';\n\n    params = _getParams();\n\n    if (Object.keys(params).length) {\n      lastPage = params.ref;\n    }\n\n    // add back button if needed\n    setTimeout(function () {\n      if (!document.getElementById('system-designer-back')) {\n        var docFragment = null;\n        var div = null;\n        var a = null;\n        var span = null;\n\n        docFragment = document.createDocumentFragment();\n        div = document.createElement('div');\n        div.setAttribute('id', 'system-designer-back');\n        div.setAttribute('style', 'top:5px;left:10px;position:absolute;font-size:18px;font-family:Helvetica,Arial,sans-serif;z-index:999999;background-color:white;');\n\n        a = document.createElement('a');\n        a.setAttribute('href', 'javascript:systemDesignerBack()');\n        a.setAttribute('style', 'text-decoration:none; color:#337AB7;');\n\n        span = document.createElement('span');\n        span.setAttribute('style', \"font-family: 'Helvetica Neue';\");\n        span.textContent = ' < System Designer';\n\n        a.appendChild(span);\n        div.appendChild(a);\n        docFragment.appendChild(div);\n\n        document.body.appendChild(docFragment);\n      }\n    }, 1000);\n  }\n}",
      "useCoreAPI": false,
      "core": true
    },
    "b1e5041617417d5d": {
      "_id": "b1e5041617417d5d",
      "component": "_RuntimeHelper",
      "state": "getBundle",
      "action": "function getBundle() { \n  var storage = this.require('storage');\n  var sysId = '';\n  var bundle = '';\n  \n  sysId = document.location.href.split('#')[1].split('?')[0].split('/')[0];\n  bundle = storage.get(sysId);\n\n  // listen to messages from System Designer\n  storage.on('changed', function (obj) {\n    if (typeof obj['system-designer-message'] !== 'undefined') {\n      $db.collections._Message.insert(obj['system-designer-message'].newValue);\n    }\n  }, true, true);\n  \n  return bundle;\n}",
      "useCoreAPI": true,
      "core": true
    }
  },
  "types": {
    "dbUpdateEvent": {
      "_id": "1f5c41309711752",
      "core": true,
      "name": "dbUpdateEvent",
      "type": "object",
      "schema": {
        "collection": { "type": "string", "mandatory": true, "default": "" },
        "id": { "type": "string", "mandatory": true, "default": "" },
        "field": { "type": "string", "mandatory": true, "default": "" },
        "value": { "type": "any", "mandatory": true, "default": null }
      }
    },
    "dbRemoveEvent": {
      "_id": "1952e1ac4213f4a",
      "core": true,
      "name": "dbRemoveEvent",
      "type": "object",
      "schema": {
        "collection": { "type": "string", "mandatory": true, "default": "" },
        "id": { "type": "string", "mandatory": true, "default": "" }
      }
    },
    "dbInsertEvent": {
      "_id": "148ef1e19810e6d",
      "core": true,
      "name": "dbInsertEvent",
      "type": "object",
      "schema": {
        "collection": { "type": "string", "mandatory": true, "default": "" },
        "document": { "type": "object", "mandatory": true, "default": {} }
      }
    },
    "message": {
      "name": "message",
      "type": "object",
      "schema": {
        "event": { "type": "string", "mandatory": true },
        "from": { "type": "string", "mandatory": false },
        "data": { "type": "object", "mandatory": true }
      },
      "core": true
    }
  },
  "components": {
    "_Channel": { "channel": { "_id": "channel", "_core": true } },
    "_RuntimeHelper": {
      "runtimeHelper": { "_id": "runtimeHelper", "_core": true }
    }
  },
  "_id": "16d0e138c8170b2"
}
