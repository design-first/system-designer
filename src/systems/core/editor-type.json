{
  "name": "editor-type",
  "master": true,
  "version": "1.0.0",
  "description": "",
  "schemas": {
    "104ad1f48518376": {
      "_id": "104ad1f48518376",
      "_name": "_Channel",
      "_inherit": ["_Component"],
      "$editorUpdateSystem": "event",
      "$editorUpdateSchema": "event",
      "$editorUpdateSchemaId": "event",
      "$editorUpdateSchemaName": "event",
      "$editorUpdateModel": "event",
      "$editorUpdateModelId": "event",
      "$editorUpdateType": "event",
      "$editorDeleteType": "event",
      "$editorUpdateBehavior": "event",
      "$editorDeleteBehavior": "event",
      "$editorUpdateComponent": "event",
      "$editorUpdateComponentId": "event",
      "$editorDeleteComponent": "event",
      "$appLogDebug": "event",
      "$appLogInfo": "event",
      "$appLogWarn": "event",
      "$appLogError": "event",
      "$appLoadSystem": "event",
      "$designerSync": "event",
      "$designerCreateBehavior": "event",
      "$designerCreateComponent": "event",
      "$designerCreateType": "event",
      "$designerCreateSchema": "event",
      "$designerCreateModel": "event",
      "$designerDeleteSchema": "event",
      "$designerDeleteModel": "event",
      "$designerDeleteType": "event",
      "$designerDeleteBehavior": "event",
      "$designerDeleteComponent": "event",
      "$designerUpdateComponent": "event",
      "$designerUpdateModel": "event",
      "$designerUpdateBehavior": "event",
      "$runtimeCreateComponent": "event",
      "$runtimeDeleteComponent": "event",
      "$runtimeUpdateComponent": "event",
      "send": "event"
    },
    "z1e592183e81ce64": {
      "_id": "z1e592183e81ce64",
      "_name": "Router",
      "_inherit": ["_Component"],
      "start": "method",
      "update": "method"
    },
    "t19b6b11ff31158d": {
      "_name": "ToolBarItem",
      "html": "link",
      "position": "property",
      "type": "property",
      "render": "method",
      "click": "event",
      "_id": "t19b6b11ff31158d",
      "_inherit": ["_Component"],
      "platform": "property"
    },
    "p1f6f51d9f111925": {
      "_name": "MenuAction",
      "html": "link",
      "position": "property",
      "type": "property",
      "hide": "method",
      "show": "method",
      "render": "method",
      "_id": "p1f6f51d9f111925",
      "_inherit": ["_Component"]
    },
    "t14a79156a81862a": {
      "_name": "MenuHeader",
      "html": "link",
      "type": "property",
      "hide": "method",
      "show": "method",
      "render": "method",
      "_id": "t14a79156a81862a",
      "_inherit": ["_Component"]
    },
    "l1d113198721599d": {
      "_name": "MenuItem",
      "html": "link",
      "position": "property",
      "type": "property",
      "name": "property",
      "platform": "property",
      "render": "method",
      "click": "event",
      "_id": "l1d113198721599d",
      "_inherit": ["_Component"]
    },
    "f1092816b571e03c": {
      "_name": "Workspace",
      "create": "method",
      "load": "method",
      "clear": "method",
      "render": "method",
      "_id": "f1092816b571e03c",
      "_inherit": ["_Component"]
    },
    "o1ead8184af1a83e": {
      "_name": "Designer",
      "_inherit": ["_Component"],
      "version": "property",
      "runWindow": "property",
      "debugWindow": "property",
      "linkModel": "method",
      "save": "method",
      "saveCordova": "method",
      "saveAs": "method",
      "welcome": "method",
      "open": "method",
      "render": "event",
      "isCordova": "method",
      "isElectron": "method",
      "updateCordovaContext": "method",
      "runMessages": "method",
      "installExtensions": "method",
      "isMac": "method",
      "addShortcuts": "method",
      "_id": "o1ead8184af1a83e"
    }
  },
  "models": {
    "135c71078810af2": {
      "_id": "135c71078810af2",
      "_name": "_Channel",
      "$editorUpdateSchemaName": {
        "params": [
          { "name": "name", "type": "string" },
          { "name": "id", "type": "string" }
        ]
      },
      "$designerSync": {},
      "$appLoadSystem": { "params": [{ "name": "system", "type": "object" }] },
      "$designerCreateBehavior": {
        "params": [{ "name": "behavior", "type": "object" }]
      },
      "$editorUpdateBehavior": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "behavior", "type": "object" }
        ]
      },
      "$designerUpdateBehavior": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "behavior", "type": "object" }
        ]
      },
      "$editorDeleteBehavior": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerDeleteBehavior": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerCreateComponent": {
        "params": [
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$editorUpdateComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$editorUpdateComponentId": {
        "params": [
          { "name": "oldId", "type": "string" },
          { "name": "newId", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$designerUpdateComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$editorDeleteComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$designerDeleteComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$designerCreateType": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "type", "type": "object" }
        ]
      },
      "$editorUpdateType": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "type", "type": "object" }
        ]
      },
      "$editorDeleteType": { "params": [{ "name": "id", "type": "string" }] },
      "$designerCreateSchema": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "schema", "type": "object" }
        ]
      },
      "$editorUpdateSchema": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "schema", "type": "object" }
        ]
      },
      "$editorUpdateSchemaId": {
        "params": [
          { "name": "oldId", "type": "string" },
          { "name": "newId", "type": "string" }
        ]
      },
      "$designerDeleteSchema": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerCreateModel": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "model", "type": "object" }
        ]
      },
      "$editorUpdateModel": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "model", "type": "object" }
        ]
      },
      "$designerUpdateModel": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "model", "type": "object" }
        ]
      },
      "$editorUpdateModelId": {
        "params": [
          { "name": "oldId", "type": "string" },
          { "name": "newId", "type": "string" }
        ]
      },
      "$designerDeleteModel": {
        "params": [{ "name": "id", "type": "string" }]
      },
      "$designerDeleteType": { "params": [{ "name": "id", "type": "string" }] },
      "$editorUpdateSystem": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "system", "type": "object" }
        ]
      },
      "$appLogDebug": { "params": [{ "name": "message", "type": "string" }] },
      "$appLogInfo": { "params": [{ "name": "message", "type": "string" }] },
      "$appLogWarn": { "params": [{ "name": "message", "type": "string" }] },
      "$appLogError": { "params": [{ "name": "message", "type": "string" }] },
      "$runtimeCreateComponent": {
        "params": [
          { "name": "collection", "type": "string" },
          { "name": "component", "type": "object" }
        ]
      },
      "$runtimeDeleteComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" }
        ]
      },
      "$runtimeUpdateComponent": {
        "params": [
          { "name": "id", "type": "string" },
          { "name": "collection", "type": "string" },
          { "name": "field", "type": "string" },
          { "name": "value", "type": "any" }
        ]
      },
      "send": { "params": [{ "name": "message", "type": "message" }] }
    },
    "c1b00612faf188cf": {
      "_id": "c1b00612faf188cf",
      "_name": "Router",
      "start": {},
      "update": {}
    },
    "u1f4c7177bb1a459": {
      "_name": "ToolBarItem",
      "html": {
        "type": "HTML",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "render": {},
      "click": {},
      "_id": "u1f4c7177bb1a459",
      "platform": {
        "type": "platform",
        "readOnly": false,
        "mandatory": false,
        "default": "all"
      }
    },
    "w124ac16b591df57": {
      "_name": "MenuAction",
      "html": {
        "type": "HTML",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "hide": {},
      "show": {},
      "render": {},
      "_id": "w124ac16b591df57"
    },
    "f13ebe1ad331b263": {
      "_name": "MenuHeader",
      "html": {
        "type": "HTML",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "hide": {},
      "show": {},
      "render": {},
      "_id": "f13ebe1ad331b263"
    },
    "u1f9a01abe31b3bf": {
      "_id": "u1f9a01abe31b3bf",
      "_name": "MenuItem",
      "html": {
        "type": "HTML",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "name": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "platform": {
        "type": "platform",
        "readOnly": false,
        "mandatory": false,
        "default": "all"
      },
      "render": {},
      "click": {}
    },
    "v1435e1809e10be7": {
      "_id": "v1435e1809e10be7",
      "_name": "Workspace",
      "create": {},
      "load": {},
      "clear": {},
      "render": {}
    },
    "q129be1c61b18285": {
      "_id": "q129be1c61b18285",
      "_name": "Designer",
      "version": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": "5.2.0"
      },
      "runWindow": {
        "type": "object",
        "readOnly": false,
        "mandatory": false,
        "default": null
      },
      "debugWindow": {
        "type": "object",
        "readOnly": false,
        "mandatory": false,
        "default": null
      },
      "linkModel": {
        "params": [
          {
            "name": "source",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "target",
            "type": "string",
            "mandatory": false,
            "default": ""
          }
        ]
      },
      "save": {},
      "saveCordova": {},
      "saveAs": {
        "params": [
          {
            "name": "data",
            "type": "object",
            "mandatory": false,
            "default": {}
          },
          {
            "name": "fileName",
            "type": "string",
            "mandatory": false,
            "default": ""
          }
        ]
      },
      "welcome": {},
      "open": {
        "params": [
          {
            "name": "url",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "target",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "isExt",
            "type": "boolean",
            "mandatory": false,
            "default": false
          }
        ]
      },
      "render": {},
      "isCordova": { "result": "boolean" },
      "isElectron": { "result": "boolean" },
      "updateCordovaContext": {},
      "runMessages": {
        "params": [
          {
            "name": "messages",
            "type": "array",
            "mandatory": true,
            "default": []
          }
        ]
      },
      "installExtensions": {},
      "isMac": {
        "params": [
          {
            "name": "param",
            "type": "any",
            "mandatory": false,
            "default": null
          }
        ],
        "result": "any"
      },
      "addShortcuts": {
        "params": [
          {
            "name": "param",
            "type": "any",
            "mandatory": false,
            "default": null
          }
        ],
        "result": "any"
      }
    }
  },
  "behaviors": {
    "m134c713c841c559": {
      "_id": "m134c713c841c559",
      "component": "vdbc51200e11z03",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-copy').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('editor').copy();\n  this.require('message').success('The text has been copied to the clipboard.');\n}"
    },
    "w1f5751bd9e15f00": {
      "_id": "w1f5751bd9e15f00",
      "component": "vdbc51200e11z04",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-paste').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('editor').paste(); \n}"
    },
    "s163371531d1ec0a": {
      "_id": "s163371531d1ec0a",
      "component": "vdbc51200e11z02",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-select-all').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('editor').selectAll(); \n}"
    },
    "e1eabd18b6717d03": {
      "_id": "e1eabd18b6717d03",
      "component": "vdbc51200e11z01",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-redo').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('editor').redo(); \n}"
    },
    "h1bee51638018e23": {
      "_id": "h1bee51638018e23",
      "component": "vdbc51200e11z00",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-undo').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('editor').undo(); \n}"
    },
    "t197d11eeee1e568": {
      "_id": "t197d11eeee1e568",
      "component": "1dbc51200e116e6",
      "state": "click",
      "action": "function click() {\n  $('#designer-toolbar-item-copyright').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  var DialogCopyright = this.require('DialogCopyright');\n  var message = this.require('copyright.html');\n  \n  DialogCopyright = new DialogCopyright({\n    'title': 'System Designer',\n    'message': message.source().replace('{{version}}', this.require('designer').version())\n  });\n  DialogCopyright.show();\n  DialogCopyright.on('ok', function () {\n    this.hide();\n  });\n}"
    },
    "g1dfae1d94d10ce1": {
      "_id": "g1dfae1d94d10ce1",
      "component": "1dbc51200e116e5",
      "state": "click",
      "action": "function click() {\n  $('#designer-toolbar-item-save').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('designer').save();\n}"
    },
    "y1fd9e171d717b39": {
      "_id": "y1fd9e171d717b39",
      "component": "1dbc51200e116e10",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-help').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  this.require('designer').open('https://designfirst.io/systemdesigner/documentation/docs/create-a-type.html', '_blank', true); \n}"
    },
    "w108111c7dc1ca6b": {
      "_id": "w108111c7dc1ca6b",
      "component": "Workspace",
      "state": "render",
      "action": "function render() { \n  var Editor = null,\n    designer = null,\n    editor = null;\n\n  Editor = this.require('Editor');\n  designer = this.require('designer');\n\n  if (designer.isCordova()) {\n    editor = new Editor({\n      '_id': 'editor',\n      'type': 'codemirror',\n      'context': 'type',\n      'editor': CodeMirror($('#designer-editor')[0], {\n        lineNumbers: true,\n        styleActiveLine: true,\n        'mode': 'application/json',\n        'theme': 'eclipse',\n        'tabSize': 2,\n        'autoCloseBrackets': true\n      })\n    });\n  } else {\n    editor = new Editor({\n      '_id': 'editor',\n      'type': 'ace',\n      'context': 'type',\n      'editor': ace.edit('designer-editor')\n    });\n  }\n  \n  editor.render();\n}",
      "useCoreAPI": false,
      "core": false
    },
    "t17faa1c1e816821": {
      "_id": "t17faa1c1e816821",
      "component": "Designer",
      "state": "render",
      "action": "function render() {\n  var id = '',\n    systemId = '',\n    system = '',\n    type = '';\n  \n  // type\n  this.require('state').type(window.location.href.split('.html')[0].split('/')[window.location.href.split('.html')[0].split('/').length - 1]);\n\n  if (this.isCordova()) {\n    this.updateCordovaContext();\n  }\n\n  // render\n  this.require('menubar').render();\n  this.require('toolbar').render();\n  this.require('workspace').render();\n  \n  // get parameters\n  id = decodeURIComponent(document.location.href.split('#')[1].split('?')[0]);\n  systemId = document.location.href.split('#')[2].split('?')[0];\n\n  // set editors\n  system = this.require('storage').get(systemId);\n  this.require('factory').create(system);\n  \n  // extensions\n  this.installExtensions();\n  \n  type = system.types[id];\n  this.require('store').uuid(id);\n  this.require('store').data(type);\n\n  document.title = 'type ' + id + ' · system ' + system.name;\n\n  this.require('editor').initValue(JSON.stringify(type, null, '\\t'), 2);\n\n  this.require('router').update();\n  \n  // shorcuts\n  this.addShortcuts();\n}",
      "useCoreAPI": false,
      "core": false
    },
    "y14257199751564c": {
      "_id": "y14257199751564c",
      "component": "Designer",
      "state": "save",
      "action": "function save() { \n  var val = this.require('editor').getValue(),\n    type = null,\n    designer = this.require('designer'),\n    message = this.require('message'),\n    systems = this.require('storage').get('system-designer-systems');\n    \n  if (systems && systems.systems.length === 0) {\n    message.danger('Can not save your type: there is no system.');\n    return;\n  }\n\n  try {\n    type = JSON.parse(val);\n  } catch (e) {\n    message.danger('Can not save your type: your type has an invalid structure.');\n    return;\n  }\n\n  if (!type.name) {\n    message.danger('The property \\'name\\' is missing.');\n    return;\n  }\n  \n  // clean name\n  type.name = type.name.replace(/\\s|\\t/gi, '_')\n    .replace(/[\\-\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\`\\{\\|\\}\\~]/gi, '')\n    .replace(/\\r|\\n/gi,'');\n\n  if (!type.type) {\n    message.danger('The property \\'type\\' is missing.');\n    return;\n  }\n\n  if (type._id && type._id.indexOf(' ') !== -1) {\n    message.danger('Invalid \\'_id\\'. <br>Space is not authorized in the value of \\'_id\\'.');\n    return;\n  }\n  \n   // global properties check\n  for (property in type) {\n    if (type.hasOwnProperty(property) && property.indexOf('_') !== 0) {\n      if (['name', 'type', 'schema', 'value', 'description'].indexOf(property) === -1) {\n        message.danger('Invalid property \\'' + property + '\\’.<br>Authorized properties are: \\'name\\', \\'type\\', \\'schema\\', \\'value\\' and \\'description\\'.');\n        return;\n      }\n    }\n  }\n\n  this.require('store').data(type);\n\n  // check if ID change\n  if (this.require('store').uuid() !== this.require('store').data().name) {\n    this.require('channel').$editorDeleteType(this.require('store').uuid());\n    this.require('store').uuid(this.require('store').data().name);\n\n    // update title\n    document.title = 'type ' + this.require('store').uuid() + ' · ' + document.title.split('·')[1].trim();\n  }\n\n  this.require('channel').$editorUpdateType(this.require('store').uuid(), this.require('store').data());\n  message.success('Type saved.');\n}",
      "useCoreAPI": false,
      "core": false
    },
    "r1df8d1a54e1c14f": {
      "_id": "r1df8d1a54e1c14f",
      "component": "w1667a15e2a1e2ef",
      "state": "start",
      "action": "function start() { \n  var storeConfig = '';\n  \n  // set locale\n  storeConfig = this.require('storage').get('system-designer-config');\n\n  if (!storeConfig) {\n    storeConfig = {};\n  }\n\n  if (typeof storeConfig.language === 'undefined') {\n    storeConfig.language = 'en-US';\n    this.require('storage').set('system-designer-config', storeConfig);\n  } else {\n    this.require('i18n').locale(storeConfig.language);\n  }\n  \n  this.require('designer').render();\n}",
      "useCoreAPI": false,
      "core": false
    },
    "b182a81e1c7173c3": {
      "_id": "b182a81e1c7173c3",
      "component": "Router",
      "state": "update",
      "action": "function update() { \n  var menubar = [],\n    i = 0,\n    length = 0,\n    id = '',\n    href = '';\n\n  id = decodeURIComponent(document.location.href.split('#')[1]);\n  collection = document.location.href.split('#')[2];\n\n  // update menubar\n  menubar = $('#designer-menubar-items > li > a');\n  length = menubar.length;\n  for (i = 0; i < length; i++) {\n    href = menubar[i].href;\n    context = href.split('#')[href.split('#').length - 1];\n    menubar[i].href = '#' + id + '#' + collection + '#' + context;\n  }\n}",
      "useCoreAPI": false,
      "core": false
    },
    "t1249a1a35319140": {
      "_id": "t1249a1a35319140",
      "component": "_Channel",
      "state": "send",
      "action": "function send(message) { \n  if (message.event.indexOf('$system') !== 0) {\n    var config = this.require('storage').get('system-designer-config'),\n      designer = this.require('designer'),\n      state = this.require('state');\n    \n    if (designer.isCordova()) {\n      state.messages().push(message);\n    }\n  \n    this.require('storage').set('system-designer-message', message);\n  \n    // message for server debug\n    if (typeof config !== 'undefined' && typeof config.debugType !== 'undefined' && config.debugType === 'server' && config.urlServer) {\n      $.post(config.urlServer.replace(':8888', '') + ':8888/' + message.event, encodeURIComponent(JSON.stringify(message.data)));\n    }\n  }\n}",
      "useCoreAPI": false,
      "core": false
    },
    "c1b2a41e5e61459c": {
      "_id": "c1b2a41e5e61459c",
      "component": "_Channel",
      "state": "init",
      "action": "function init(conf) { \n  this.require('_Storage').on('changed', function changed(obj) {\n  if (typeof obj['system-designer-message'] !== 'undefined') {\n    $db.collections._Message.insert(obj['system-designer-message'].newValue);\n  }\n}, true);\n}",
      "useCoreAPI": false,
      "core": false
    },
    "a1eabd1ce561031c": {
      "_id": "a1eabd1ce561031c",
      "component": "y174dd1c4fb187ed",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-command').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  if (this.require('factory').system()) {\n      if ($('#designer-dialog-command-modal').length) {\n        $('#designer-dialog-input-command').val('');\n        $('#designer-dialog-command-result').empty();\n        $('#designer-dialog-command-result-area').hide();\n        $('#designer-dialog-command-modal').modal('show');\n    } else {\n      var Dialog = runtime.require('DialogCommand');\n      var dialog = new Dialog({'title':''});\n      dialog.show();\n    }\t\n  } else {\n    this.require('message').warning('There is no system.');\n  }\n}",
      "useCoreAPI": false,
      "core": false
    },
    "y133f11e82c1aad7": {
      "_id": "y133f11e82c1aad7",
      "component": "k1423a15ea412f5d",
      "state": "click",
      "action": "function click() { \n  $('#designer-toolbar-item-command').tooltip('hide');\n  if ($('#designer-dialog').children().length) {\n    $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n  }\n  \n  if (this.require('factory').system()) {\n      if ($('#designer-dialog-command-modal').length) {\n        $('#designer-dialog-input-command').val('');\n        $('#designer-dialog-command-result').empty();\n        $('#designer-dialog-command-result-area').hide();\n        $('#designer-dialog-command-modal').modal('show');\n    } else {\n      var Dialog = runtime.require('DialogCommand');\n      var dialog = new Dialog({'title':''});\n      dialog.show();\n    }\t\n  } else {\n    this.require('message').warning('There is no system.');\n  }\n}",
      "useCoreAPI": false,
      "core": false
    },
    "x13d2a197b411642": {
      "_id": "x13d2a197b411642",
      "component": "Designer",
      "state": "addShortcuts",
      "action": "function addShorcuts() { \n  if (!this.isCordova()) {\n  \tif (this.isMac()) {\n      document.body.addEventListener('keydown', function keydown(event){\n        var message = this.require('message'),\n            key = event.which || event.keyCode,\n            command = event.metaKey ? event.metaKey : ((key === 91) ? true : false),\n            dialog = null,\n            Dialog = null;\n    \n        switch (true) {\n          // Command + O\n          case key === 79 && command:\n            if ($('#designer-dialog').children().length) {\n              $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n            }\n            Dialog = runtime.require('DialogCommand');\n            dialog = new Dialog({'title':''});\n            dialog.show();\n            event.stopPropagation();\n            event.preventDefault();\n            return false;\n            break;\n          default:\n            break;\n        }\n      }.bind(this));\n  \t} else {\n      document.body.addEventListener('keydown', function keydown(event){\n        var key = event.which || event.keyCode;\n        var ctrl = event.ctrlKey ? event.ctrlKey : ((key === 17) ? true : false);\n  \n        switch (true) {\n          // Ctrl + O\n          case key === 79 && ctrl:\n            if ($('#designer-dialog').children().length) {\n              $('#' + $(\"#designer-dialog\").children()[0].id).removeClass('fade').modal('hide');\n            }\n            Dialog = runtime.require('DialogCommand');\n            dialog = new Dialog({'title':''});\n            dialog.show();\n            event.stopPropagation();\n            event.preventDefault();\n            return false;\n            break;\n          default:\n            break;\n        }\n      }.bind(this)); \n  \t}\n  }\n}",
      "useCoreAPI": false,
      "core": false
    }
  },
  "types": {},
  "components": {
    "Router": { "router": { "_id": "router" } },
    "ToolBarItem": {
      "vdbc51200e11z03": {
        "_id": "vdbc51200e11z03",
        "html": "toolbar-item-copy.html",
        "position": 50,
        "type": "type",
        "platform": "electron"
      },
      "vdbc51200e11z04": {
        "_id": "vdbc51200e11z04",
        "html": "toolbar-item-paste.html",
        "position": 60,
        "type": "type",
        "platform": "electron"
      },
      "1dbc51200e116e10": {
        "_id": "1dbc51200e116e10",
        "html": "toolbar-item-help.html",
        "position": 80,
        "type": "type",
        "platform": "all"
      },
      "1dbc51200e116e5": {
        "_id": "1dbc51200e116e5",
        "html": "toolbar-item-save.html",
        "position": 10,
        "type": "type",
        "platform": "all"
      },
      "1dbc51200e116e6": {
        "_id": "1dbc51200e116e6",
        "html": "toolbar-item-copyright.html",
        "position": 90,
        "type": "type",
        "platform": "all"
      },
      "vdbc51200e11z00": {
        "_id": "vdbc51200e11z00",
        "html": "toolbar-item-undo.html",
        "position": 20,
        "type": "type",
        "platform": "all"
      },
      "vdbc51200e11z01": {
        "_id": "vdbc51200e11z01",
        "html": "toolbar-item-redo.html",
        "position": 30,
        "type": "type",
        "platform": "all"
      },
      "vdbc51200e11z02": {
        "_id": "vdbc51200e11z02",
        "html": "toolbar-item-select-all.html",
        "position": 40,
        "type": "type",
        "platform": "electron"
      },
      "y174dd1c4fb187ed": {
        "_id": "y174dd1c4fb187ed",
        "html": "toolbar-item-command.html",
        "platform": "web",
        "position": 75,
        "type": "type"
      },
      "k1423a15ea412f5d": {
        "_id": "k1423a15ea412f5d",
        "html": "toolbar-item-command.html",
        "platform": "electron",
        "position": 75,
        "type": "type"
      }
    },
    "Designer": {},
    "MenuItem": {
      "1f1781882618104": {
        "_id": "1f1781882618104",
        "name": "type",
        "html": "menu-item-type.html",
        "position": 10,
        "type": "type",
        "platform": "all"
      }
    },
    "MenuAction": {
      "1f8571164c179bf": {
        "_id": "1f8571164c179bf",
        "html": "menu-action-version.html",
        "position": 10,
        "type": "type"
      }
    },
    "MenuHeader": {
      "1fb101b99813a14": {
        "_id": "1fb101b99813a14",
        "html": "menu-header-type.html",
        "type": "type"
      }
    },
    "Workspace": {}
  },
  "_id": "w1667a15e2a1e2ef"
}
